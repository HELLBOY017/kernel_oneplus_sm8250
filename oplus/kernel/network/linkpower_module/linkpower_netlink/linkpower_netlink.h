/* SPDX-License-Identifier: GPL-2.0-only */
/*
 * Copyright (C) 2018-2020 Oplus. All rights reserved.
 */

#ifndef _LINKPOWER_NETLINK_H_
#define _LINKPOWER_NETLINK_H_

#include <net/genetlink.h>

#define NLA_DATA(nla) ((char *)((char *)(nla) + NLA_HDRLEN))

/* Netlink */
enum
{
	LINKPOWER_NETLINK_CMD_UNSPEC,
	LINKPOWER_NETLINK_CMD_DOWNLINK,
	LINKPOWER_NETLINK_CMD_UPLINK,
	__LINKPOWER_NETLINK_CMD_MAX
};

enum
{
	/* sk_pid_hook */
	NETLINK_ID_SK_PID_HOOK_BEGIN = 0,
	NETLINK_REQUEST_SK_PORT_AND_PID = 1,
	NETLINK_RESPONSE_SK_PORT_AND_PID,
	NETLINK_REQUEST_CLOSE_SK_FOR_PROC,
	NETLINK_RESPONSE_CLOSE_SK_FOR_PROC,
	NETLINK_REQUEST_START_MONITOR_PUSH_SOCK,
	NETLINK_REQUEST_STOP_MONITOR_PUSH_SOCK,
	NETLINK_UNSOL_MONITOR_PUSH_SOCK,
	NETLINK_REQUEST_MONITOR_SKCONNECT,
	NETLINK_REQUEST_SKCONNECT_INFO,
	NETLINK_RESPONSE_SKCONNECT_INFO,
	NETLINK_ID_SK_PID_HOOK_END = 99,

	/* hba_proxy_mtk */
	NETLINK_ID_HBA_PROXY_MTK_BEGIN = 100,
	NETLINK_REQUEST_HBA_ESTABLISH,
	NETLINK_RESPONSE_HBA_ESTABLISH,
	NETLINK_REQUEST_HBA_PAUSE,
	NETLINK_RESPONSE_HBA_PAUSE,
	NETLINK_REQUEST_HBA_RESUME,
	NETLINK_RESPONSE_HBA_RESUME,
	NETLINK_REQUEST_HBA_STOP,
	NETLINK_RESPONSE_HBA_STOP,
	NETLINK_REQUEST_HBA_SEND_NOW,
	NETLINK_RESPONSE_HBA_SEND_NOW,
	NETLINK_REQUEST_HBA_DELETE,
	NETLINK_UNSOL_HBA_PAUSE,
	NETLINK_UNSOL_HBA_TIMEOUT,
	NETLINK_ID_HBA_PROXY_MTK_END = 199,

	/* ccci_wakeup_hook */
	NETLINK_ID_CCCI_WAKEUP_HOOK_BEGIN = 200,
	NETLINK_REQUEST_CCCI_WAKEUP,
	NETLINK_RESPONSE_CCCI_WAKEUP,
	NETLINK_ID_CCCI_WAKEUP_HOOK_END = 299,

	/* hba_proxy_qcom */
	NETLINK_ID_HBA_PROXY_QCOM_BEGIN = 300,
	NETLINK_REQUEST_HBA_ESTABLISH_QCOM,
	NETLINK_ID_HBA_PROXY_QCOM_END = 399,

	/* qrtr_hook */
	NETLINK_ID_QRTR_HOOK_BEGIN = 400,
	NETLINK_REQUEST_QRTR_WAKEUP,
	NETLINK_RESPONSE_QRTR_WAKEUP,
	NETLINK_ID_QRTR_HOOK_END = 499,

	__LINKPOWER_NETLINK_MSG_MAX = 1000,
};

#endif /*_LINKPOWER_NETLINK_H_*/
