/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: netlink_msg.proto */

#ifndef PROTOBUF_C_netlink_5fmsg_2eproto__INCLUDED
#define PROTOBUF_C_netlink_5fmsg_2eproto__INCLUDED

#ifndef assert
#define assert(condition) ((void)0)
#endif

#include "../comm_netlink/protobuf-c.h"

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1004001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct Netlink__Proto__MessageHeader Netlink__Proto__MessageHeader;
typedef struct Netlink__Proto__RequestSetDpiUid Netlink__Proto__RequestSetDpiUid;
typedef struct Netlink__Proto__RequestGetDpiStreamSpeed Netlink__Proto__RequestGetDpiStreamSpeed;
typedef struct Netlink__Proto__RequestSetLogSteamIp Netlink__Proto__RequestSetLogSteamIp;
typedef struct Netlink__Proto__RequestGetAllUidSpeed Netlink__Proto__RequestGetAllUidSpeed;
typedef struct Netlink__Proto__RequestSetDpiMatchAllUidEable Netlink__Proto__RequestSetDpiMatchAllUidEable;
typedef struct Netlink__Proto__RequestMessage Netlink__Proto__RequestMessage;
typedef struct Netlink__Proto__DpiSpeedItem Netlink__Proto__DpiSpeedItem;
typedef struct Netlink__Proto__ResponseGetDpiStreamSpeed Netlink__Proto__ResponseGetDpiStreamSpeed;
typedef struct Netlink__Proto__ResponseGetWzryServerIp Netlink__Proto__ResponseGetWzryServerIp;
typedef struct Netlink__Proto__GameDelayStats Netlink__Proto__GameDelayStats;
typedef struct Netlink__Proto__ResponseGetGameDelay Netlink__Proto__ResponseGetGameDelay;
typedef struct Netlink__Proto__ResponseMessage Netlink__Proto__ResponseMessage;
typedef struct Netlink__Proto__InformMessage Netlink__Proto__InformMessage;
typedef struct Netlink__Proto__NotifyWzryServerIp Netlink__Proto__NotifyWzryServerIp;
typedef struct Netlink__Proto__NotifyMessage Netlink__Proto__NotifyMessage;


/* --- enums --- */

typedef enum _Netlink__Proto__NetlinkMsgId {
  NETLINK__PROTO__NETLINK_MSG_ID__COMM_NETLINK_EVENT_UNSPEC = 0,
  NETLINK__PROTO__NETLINK_MSG_ID__COMM_NETLINK_EVENT_SET_DPI_UID = 11,
  NETLINK__PROTO__NETLINK_MSG_ID__COMM_NETLINK_EVENT_GET_DPI_STREAM_SPEED = 12,
  NETLINK__PROTO__NETLINK_MSG_ID__COMM_NETLINK_EVENT_GET_ALL_UID_DPI_SPEED = 13,
  NETLINK__PROTO__NETLINK_MSG_ID__COMM_NETLINK_EVENT_SET_DPI_MATCH_ALL_UID = 14,
  NETLINK__PROTO__NETLINK_MSG_ID__COMM_NETLINK_EVENT_GET_WZRY_SERVER_IP = 51,
  NETLINK__PROTO__NETLINK_MSG_ID__COMM_NETLINK_EVENT_NOTIFY_WZRY_SERVER_IP = 52,
  NETLINK__PROTO__NETLINK_MSG_ID__COMM_NETLINK_EVENT_GET_WZRY_DATA = 53,
  NETLINK__PROTO__NETLINK_MSG_ID__COMM_NETLINK_EVENT_GET_DELAY = 54,
  NETLINK__PROTO__NETLINK_MSG_ID__COMM_NETLINK_EVENT_SET_LOG_STREAM_IPADDR = 101
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(NETLINK__PROTO__NETLINK_MSG_ID)
} Netlink__Proto__NetlinkMsgId;
typedef enum _Netlink__Proto__DpiLevelType {
  NETLINK__PROTO__DPI_LEVEL_TYPE__DPI_LEVEL_UNSPEC = 0,
  NETLINK__PROTO__DPI_LEVEL_TYPE__DPI_LEVEL_UID = 1,
  NETLINK__PROTO__DPI_LEVEL_TYPE__DPI_LEVEL_APP = 2,
  NETLINK__PROTO__DPI_LEVEL_TYPE__DPI_LEVEL_FUNC = 3,
  NETLINK__PROTO__DPI_LEVEL_TYPE__DPI_LEVEL_STREAM = 4
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(NETLINK__PROTO__DPI_LEVEL_TYPE)
} Netlink__Proto__DpiLevelType;

/* --- messages --- */

struct  Netlink__Proto__MessageHeader
{
  ProtobufCMessage base;
  uint32_t requestid;
  uint32_t eventid;
  uint32_t retcode;
};
#define NETLINK__PROTO__MESSAGE_HEADER__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&netlink__proto__message_header__descriptor) \
    , 0, 0, 0 }


struct  Netlink__Proto__RequestSetDpiUid
{
  ProtobufCMessage base;
  uint32_t tmgpsgameuid;
  uint32_t logkituid;
  uint32_t haytapmarketuid;
};
#define NETLINK__PROTO__REQUEST_SET_DPI_UID__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&netlink__proto__request_set_dpi_uid__descriptor) \
    , 0, 0, 0 }


struct  Netlink__Proto__RequestGetDpiStreamSpeed
{
  ProtobufCMessage base;
  size_t n_ifidx;
  uint32_t *ifidx;
  size_t n_uid;
  uint32_t *uid;
  uint64_t speed_size;
};
#define NETLINK__PROTO__REQUEST_GET_DPI_STREAM_SPEED__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&netlink__proto__request_get_dpi_stream_speed__descriptor) \
    , 0,NULL, 0,NULL, 0 }


struct  Netlink__Proto__RequestSetLogSteamIp
{
  ProtobufCMessage base;
  char *hostname;
  size_t n_ipaddr;
  uint32_t *ipaddr;
};
#define NETLINK__PROTO__REQUEST_SET_LOG_STEAM_IP__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&netlink__proto__request_set_log_steam_ip__descriptor) \
    , NULL, 0,NULL }


struct  Netlink__Proto__RequestGetAllUidSpeed
{
  ProtobufCMessage base;
  size_t n_ifidx;
  uint32_t *ifidx;
  uint64_t speed_size;
};
#define NETLINK__PROTO__REQUEST_GET_ALL_UID_SPEED__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&netlink__proto__request_get_all_uid_speed__descriptor) \
    , 0,NULL, 0 }


struct  Netlink__Proto__RequestSetDpiMatchAllUidEable
{
  ProtobufCMessage base;
  uint32_t enable;
};
#define NETLINK__PROTO__REQUEST_SET_DPI_MATCH_ALL_UID_EABLE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&netlink__proto__request_set_dpi_match_all_uid_eable__descriptor) \
    , 0 }


typedef enum {
  NETLINK__PROTO__REQUEST_MESSAGE__REQUEST_DATA__NOT_SET = 0,
  NETLINK__PROTO__REQUEST_MESSAGE__REQUEST_DATA_REQUSET_SET_DPI_UID = 11,
  NETLINK__PROTO__REQUEST_MESSAGE__REQUEST_DATA_REQUEST_GET_DPI_STREAM_SPEED = 12,
  NETLINK__PROTO__REQUEST_MESSAGE__REQUEST_DATA_REQUEST_SET_LOG_STEAM_IP = 13,
  NETLINK__PROTO__REQUEST_MESSAGE__REQUEST_DATA_REQUEST_GET_ALL_UID_SPEED = 14,
  NETLINK__PROTO__REQUEST_MESSAGE__REQUEST_DATA_REQUEST_SET_DPI_MATCH_ALL_UID_EABLE = 15
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(NETLINK__PROTO__REQUEST_MESSAGE__REQUEST_DATA__CASE)
} Netlink__Proto__RequestMessage__RequestDataCase;

struct  Netlink__Proto__RequestMessage
{
  ProtobufCMessage base;
  Netlink__Proto__MessageHeader *header;
  Netlink__Proto__RequestMessage__RequestDataCase request_data_case;
  union {
    Netlink__Proto__RequestSetDpiUid *requsetsetdpiuid;
    Netlink__Proto__RequestGetDpiStreamSpeed *requestgetdpistreamspeed;
    Netlink__Proto__RequestSetLogSteamIp *requestsetlogsteamip;
    Netlink__Proto__RequestGetAllUidSpeed *requestgetalluidspeed;
    Netlink__Proto__RequestSetDpiMatchAllUidEable *requestsetdpimatchalluideable;
  };
};
#define NETLINK__PROTO__REQUEST_MESSAGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&netlink__proto__request_message__descriptor) \
    , NULL, NETLINK__PROTO__REQUEST_MESSAGE__REQUEST_DATA__NOT_SET, {0} }


struct  Netlink__Proto__DpiSpeedItem
{
  ProtobufCMessage base;
  Netlink__Proto__DpiLevelType type;
  uint32_t uid;
  uint32_t ifidx;
  uint64_t dpiid;
  uint64_t rxspeed;
  uint64_t txspeed;
};
#define NETLINK__PROTO__DPI_SPEED_ITEM__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&netlink__proto__dpi_speed_item__descriptor) \
    , NETLINK__PROTO__DPI_LEVEL_TYPE__DPI_LEVEL_UNSPEC, 0, 0, 0, 0, 0 }


struct  Netlink__Proto__ResponseGetDpiStreamSpeed
{
  ProtobufCMessage base;
  size_t n_streamuidspeed;
  Netlink__Proto__DpiSpeedItem **streamuidspeed;
};
#define NETLINK__PROTO__RESPONSE_GET_DPI_STREAM_SPEED__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&netlink__proto__response_get_dpi_stream_speed__descriptor) \
    , 0,NULL }


struct  Netlink__Proto__ResponseGetWzryServerIp
{
  ProtobufCMessage base;
  uint32_t battleip;
};
#define NETLINK__PROTO__RESPONSE_GET_WZRY_SERVER_IP__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&netlink__proto__response_get_wzry_server_ip__descriptor) \
    , 0 }


struct  Netlink__Proto__GameDelayStats
{
  ProtobufCMessage base;
  uint64_t timestamp;
  uint64_t rx_ip_delay;
  uint64_t rx_udp_delay;
  uint64_t rx_user_delay;
  uint64_t tx_udp_delay;
  uint64_t tx_ip_delay;
  uint64_t tx_sched_delay;
  uint32_t down_packets;
  uint32_t up_packets;
  size_t n_down_delay_max;
  uint64_t *down_delay_max;
};
#define NETLINK__PROTO__GAME_DELAY_STATS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&netlink__proto__game_delay_stats__descriptor) \
    , 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,NULL }


struct  Netlink__Proto__ResponseGetGameDelay
{
  ProtobufCMessage base;
  size_t n_stats;
  Netlink__Proto__GameDelayStats **stats;
};
#define NETLINK__PROTO__RESPONSE_GET_GAME_DELAY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&netlink__proto__response_get_game_delay__descriptor) \
    , 0,NULL }


typedef enum {
  NETLINK__PROTO__RESPONSE_MESSAGE__RESPONSE_DATA__NOT_SET = 0,
  NETLINK__PROTO__RESPONSE_MESSAGE__RESPONSE_DATA_RSP_GET_DPI_STREAM_SPEED = 11,
  NETLINK__PROTO__RESPONSE_MESSAGE__RESPONSE_DATA_RSP_WZRY_SERVER_IP = 12,
  NETLINK__PROTO__RESPONSE_MESSAGE__RESPONSE_DATA_RSP_GAME_DELAY = 13
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(NETLINK__PROTO__RESPONSE_MESSAGE__RESPONSE_DATA__CASE)
} Netlink__Proto__ResponseMessage__ResponseDataCase;

struct  Netlink__Proto__ResponseMessage
{
  ProtobufCMessage base;
  Netlink__Proto__MessageHeader *header;
  Netlink__Proto__ResponseMessage__ResponseDataCase response_data_case;
  union {
    Netlink__Proto__ResponseGetDpiStreamSpeed *rspgetdpistreamspeed;
    Netlink__Proto__ResponseGetWzryServerIp *rspwzryserverip;
    Netlink__Proto__ResponseGetGameDelay *rspgamedelay;
  };
};
#define NETLINK__PROTO__RESPONSE_MESSAGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&netlink__proto__response_message__descriptor) \
    , NULL, NETLINK__PROTO__RESPONSE_MESSAGE__RESPONSE_DATA__NOT_SET, {0} }


struct  Netlink__Proto__InformMessage
{
  ProtobufCMessage base;
  Netlink__Proto__MessageHeader *header;
};
#define NETLINK__PROTO__INFORM_MESSAGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&netlink__proto__inform_message__descriptor) \
    , NULL }


struct  Netlink__Proto__NotifyWzryServerIp
{
  ProtobufCMessage base;
  uint32_t battleip;
};
#define NETLINK__PROTO__NOTIFY_WZRY_SERVER_IP__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&netlink__proto__notify_wzry_server_ip__descriptor) \
    , 0 }


typedef enum {
  NETLINK__PROTO__NOTIFY_MESSAGE__NOTIFY_DATA__NOT_SET = 0,
  NETLINK__PROTO__NOTIFY_MESSAGE__NOTIFY_DATA_NOTIFY_WZRY_SERVER_IP = 11
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(NETLINK__PROTO__NOTIFY_MESSAGE__NOTIFY_DATA__CASE)
} Netlink__Proto__NotifyMessage__NotifyDataCase;

struct  Netlink__Proto__NotifyMessage
{
  ProtobufCMessage base;
  Netlink__Proto__MessageHeader *header;
  Netlink__Proto__NotifyMessage__NotifyDataCase notify_data_case;
  union {
    Netlink__Proto__NotifyWzryServerIp *notifywzryserverip;
  };
};
#define NETLINK__PROTO__NOTIFY_MESSAGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&netlink__proto__notify_message__descriptor) \
    , NULL, NETLINK__PROTO__NOTIFY_MESSAGE__NOTIFY_DATA__NOT_SET, {0} }


/* Netlink__Proto__MessageHeader methods */
void   netlink__proto__message_header__init
                     (ProtobufCMessage         *message);
size_t netlink__proto__message_header__get_packed_size
                     (const Netlink__Proto__MessageHeader   *message);
size_t netlink__proto__message_header__pack
                     (const Netlink__Proto__MessageHeader   *message,
                      uint8_t             *out);
size_t netlink__proto__message_header__pack_to_buffer
                     (const Netlink__Proto__MessageHeader   *message,
                      ProtobufCBuffer     *buffer);
Netlink__Proto__MessageHeader *
       netlink__proto__message_header__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   netlink__proto__message_header__free_unpacked
                     (Netlink__Proto__MessageHeader *message,
                      ProtobufCAllocator *allocator);
/* Netlink__Proto__RequestSetDpiUid methods */
void   netlink__proto__request_set_dpi_uid__init
                     (ProtobufCMessage         *message);
size_t netlink__proto__request_set_dpi_uid__get_packed_size
                     (const Netlink__Proto__RequestSetDpiUid   *message);
size_t netlink__proto__request_set_dpi_uid__pack
                     (const Netlink__Proto__RequestSetDpiUid   *message,
                      uint8_t             *out);
size_t netlink__proto__request_set_dpi_uid__pack_to_buffer
                     (const Netlink__Proto__RequestSetDpiUid   *message,
                      ProtobufCBuffer     *buffer);
Netlink__Proto__RequestSetDpiUid *
       netlink__proto__request_set_dpi_uid__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   netlink__proto__request_set_dpi_uid__free_unpacked
                     (Netlink__Proto__RequestSetDpiUid *message,
                      ProtobufCAllocator *allocator);
/* Netlink__Proto__RequestGetDpiStreamSpeed methods */
void   netlink__proto__request_get_dpi_stream_speed__init
                     (ProtobufCMessage         *message);
size_t netlink__proto__request_get_dpi_stream_speed__get_packed_size
                     (const Netlink__Proto__RequestGetDpiStreamSpeed   *message);
size_t netlink__proto__request_get_dpi_stream_speed__pack
                     (const Netlink__Proto__RequestGetDpiStreamSpeed   *message,
                      uint8_t             *out);
size_t netlink__proto__request_get_dpi_stream_speed__pack_to_buffer
                     (const Netlink__Proto__RequestGetDpiStreamSpeed   *message,
                      ProtobufCBuffer     *buffer);
Netlink__Proto__RequestGetDpiStreamSpeed *
       netlink__proto__request_get_dpi_stream_speed__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   netlink__proto__request_get_dpi_stream_speed__free_unpacked
                     (Netlink__Proto__RequestGetDpiStreamSpeed *message,
                      ProtobufCAllocator *allocator);
/* Netlink__Proto__RequestSetLogSteamIp methods */
void   netlink__proto__request_set_log_steam_ip__init
                     (ProtobufCMessage         *message);
size_t netlink__proto__request_set_log_steam_ip__get_packed_size
                     (const Netlink__Proto__RequestSetLogSteamIp   *message);
size_t netlink__proto__request_set_log_steam_ip__pack
                     (const Netlink__Proto__RequestSetLogSteamIp   *message,
                      uint8_t             *out);
size_t netlink__proto__request_set_log_steam_ip__pack_to_buffer
                     (const Netlink__Proto__RequestSetLogSteamIp   *message,
                      ProtobufCBuffer     *buffer);
Netlink__Proto__RequestSetLogSteamIp *
       netlink__proto__request_set_log_steam_ip__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   netlink__proto__request_set_log_steam_ip__free_unpacked
                     (Netlink__Proto__RequestSetLogSteamIp *message,
                      ProtobufCAllocator *allocator);
/* Netlink__Proto__RequestGetAllUidSpeed methods */
void   netlink__proto__request_get_all_uid_speed__init
                     (ProtobufCMessage         *message);
size_t netlink__proto__request_get_all_uid_speed__get_packed_size
                     (const Netlink__Proto__RequestGetAllUidSpeed   *message);
size_t netlink__proto__request_get_all_uid_speed__pack
                     (const Netlink__Proto__RequestGetAllUidSpeed   *message,
                      uint8_t             *out);
size_t netlink__proto__request_get_all_uid_speed__pack_to_buffer
                     (const Netlink__Proto__RequestGetAllUidSpeed   *message,
                      ProtobufCBuffer     *buffer);
Netlink__Proto__RequestGetAllUidSpeed *
       netlink__proto__request_get_all_uid_speed__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   netlink__proto__request_get_all_uid_speed__free_unpacked
                     (Netlink__Proto__RequestGetAllUidSpeed *message,
                      ProtobufCAllocator *allocator);
/* Netlink__Proto__RequestSetDpiMatchAllUidEable methods */
void   netlink__proto__request_set_dpi_match_all_uid_eable__init
                     (ProtobufCMessage         *message);
size_t netlink__proto__request_set_dpi_match_all_uid_eable__get_packed_size
                     (const Netlink__Proto__RequestSetDpiMatchAllUidEable   *message);
size_t netlink__proto__request_set_dpi_match_all_uid_eable__pack
                     (const Netlink__Proto__RequestSetDpiMatchAllUidEable   *message,
                      uint8_t             *out);
size_t netlink__proto__request_set_dpi_match_all_uid_eable__pack_to_buffer
                     (const Netlink__Proto__RequestSetDpiMatchAllUidEable   *message,
                      ProtobufCBuffer     *buffer);
Netlink__Proto__RequestSetDpiMatchAllUidEable *
       netlink__proto__request_set_dpi_match_all_uid_eable__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   netlink__proto__request_set_dpi_match_all_uid_eable__free_unpacked
                     (Netlink__Proto__RequestSetDpiMatchAllUidEable *message,
                      ProtobufCAllocator *allocator);
/* Netlink__Proto__RequestMessage methods */
void   netlink__proto__request_message__init
                     (ProtobufCMessage         *message);
size_t netlink__proto__request_message__get_packed_size
                     (const Netlink__Proto__RequestMessage   *message);
size_t netlink__proto__request_message__pack
                     (const Netlink__Proto__RequestMessage   *message,
                      uint8_t             *out);
size_t netlink__proto__request_message__pack_to_buffer
                     (const Netlink__Proto__RequestMessage   *message,
                      ProtobufCBuffer     *buffer);
Netlink__Proto__RequestMessage *
       netlink__proto__request_message__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   netlink__proto__request_message__free_unpacked
                     (Netlink__Proto__RequestMessage *message,
                      ProtobufCAllocator *allocator);
/* Netlink__Proto__DpiSpeedItem methods */
void   netlink__proto__dpi_speed_item__init
                     (ProtobufCMessage         *message);
size_t netlink__proto__dpi_speed_item__get_packed_size
                     (const Netlink__Proto__DpiSpeedItem   *message);
size_t netlink__proto__dpi_speed_item__pack
                     (const Netlink__Proto__DpiSpeedItem   *message,
                      uint8_t             *out);
size_t netlink__proto__dpi_speed_item__pack_to_buffer
                     (const Netlink__Proto__DpiSpeedItem   *message,
                      ProtobufCBuffer     *buffer);
Netlink__Proto__DpiSpeedItem *
       netlink__proto__dpi_speed_item__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   netlink__proto__dpi_speed_item__free_unpacked
                     (Netlink__Proto__DpiSpeedItem *message,
                      ProtobufCAllocator *allocator);
/* Netlink__Proto__ResponseGetDpiStreamSpeed methods */
void   netlink__proto__response_get_dpi_stream_speed__init
                     (ProtobufCMessage         *message);
size_t netlink__proto__response_get_dpi_stream_speed__get_packed_size
                     (const Netlink__Proto__ResponseGetDpiStreamSpeed   *message);
size_t netlink__proto__response_get_dpi_stream_speed__pack
                     (const Netlink__Proto__ResponseGetDpiStreamSpeed   *message,
                      uint8_t             *out);
size_t netlink__proto__response_get_dpi_stream_speed__pack_to_buffer
                     (const Netlink__Proto__ResponseGetDpiStreamSpeed   *message,
                      ProtobufCBuffer     *buffer);
Netlink__Proto__ResponseGetDpiStreamSpeed *
       netlink__proto__response_get_dpi_stream_speed__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   netlink__proto__response_get_dpi_stream_speed__free_unpacked
                     (Netlink__Proto__ResponseGetDpiStreamSpeed *message,
                      ProtobufCAllocator *allocator);
/* Netlink__Proto__ResponseGetWzryServerIp methods */
void   netlink__proto__response_get_wzry_server_ip__init
                     (ProtobufCMessage         *message);
size_t netlink__proto__response_get_wzry_server_ip__get_packed_size
                     (const Netlink__Proto__ResponseGetWzryServerIp   *message);
size_t netlink__proto__response_get_wzry_server_ip__pack
                     (const Netlink__Proto__ResponseGetWzryServerIp   *message,
                      uint8_t             *out);
size_t netlink__proto__response_get_wzry_server_ip__pack_to_buffer
                     (const Netlink__Proto__ResponseGetWzryServerIp   *message,
                      ProtobufCBuffer     *buffer);
Netlink__Proto__ResponseGetWzryServerIp *
       netlink__proto__response_get_wzry_server_ip__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   netlink__proto__response_get_wzry_server_ip__free_unpacked
                     (Netlink__Proto__ResponseGetWzryServerIp *message,
                      ProtobufCAllocator *allocator);
/* Netlink__Proto__GameDelayStats methods */
void   netlink__proto__game_delay_stats__init
                     (ProtobufCMessage         *message);
size_t netlink__proto__game_delay_stats__get_packed_size
                     (const Netlink__Proto__GameDelayStats   *message);
size_t netlink__proto__game_delay_stats__pack
                     (const Netlink__Proto__GameDelayStats   *message,
                      uint8_t             *out);
size_t netlink__proto__game_delay_stats__pack_to_buffer
                     (const Netlink__Proto__GameDelayStats   *message,
                      ProtobufCBuffer     *buffer);
Netlink__Proto__GameDelayStats *
       netlink__proto__game_delay_stats__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   netlink__proto__game_delay_stats__free_unpacked
                     (Netlink__Proto__GameDelayStats *message,
                      ProtobufCAllocator *allocator);
/* Netlink__Proto__ResponseGetGameDelay methods */
void   netlink__proto__response_get_game_delay__init
                     (ProtobufCMessage         *message);
size_t netlink__proto__response_get_game_delay__get_packed_size
                     (const Netlink__Proto__ResponseGetGameDelay   *message);
size_t netlink__proto__response_get_game_delay__pack
                     (const Netlink__Proto__ResponseGetGameDelay   *message,
                      uint8_t             *out);
size_t netlink__proto__response_get_game_delay__pack_to_buffer
                     (const Netlink__Proto__ResponseGetGameDelay   *message,
                      ProtobufCBuffer     *buffer);
Netlink__Proto__ResponseGetGameDelay *
       netlink__proto__response_get_game_delay__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   netlink__proto__response_get_game_delay__free_unpacked
                     (Netlink__Proto__ResponseGetGameDelay *message,
                      ProtobufCAllocator *allocator);
/* Netlink__Proto__ResponseMessage methods */
void   netlink__proto__response_message__init
                     (ProtobufCMessage         *message);
size_t netlink__proto__response_message__get_packed_size
                     (const Netlink__Proto__ResponseMessage   *message);
size_t netlink__proto__response_message__pack
                     (const Netlink__Proto__ResponseMessage   *message,
                      uint8_t             *out);
size_t netlink__proto__response_message__pack_to_buffer
                     (const Netlink__Proto__ResponseMessage   *message,
                      ProtobufCBuffer     *buffer);
Netlink__Proto__ResponseMessage *
       netlink__proto__response_message__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   netlink__proto__response_message__free_unpacked
                     (Netlink__Proto__ResponseMessage *message,
                      ProtobufCAllocator *allocator);
/* Netlink__Proto__InformMessage methods */
void   netlink__proto__inform_message__init
                     (ProtobufCMessage         *message);
size_t netlink__proto__inform_message__get_packed_size
                     (const Netlink__Proto__InformMessage   *message);
size_t netlink__proto__inform_message__pack
                     (const Netlink__Proto__InformMessage   *message,
                      uint8_t             *out);
size_t netlink__proto__inform_message__pack_to_buffer
                     (const Netlink__Proto__InformMessage   *message,
                      ProtobufCBuffer     *buffer);
Netlink__Proto__InformMessage *
       netlink__proto__inform_message__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   netlink__proto__inform_message__free_unpacked
                     (Netlink__Proto__InformMessage *message,
                      ProtobufCAllocator *allocator);
/* Netlink__Proto__NotifyWzryServerIp methods */
void   netlink__proto__notify_wzry_server_ip__init
                     (ProtobufCMessage         *message);
size_t netlink__proto__notify_wzry_server_ip__get_packed_size
                     (const Netlink__Proto__NotifyWzryServerIp   *message);
size_t netlink__proto__notify_wzry_server_ip__pack
                     (const Netlink__Proto__NotifyWzryServerIp   *message,
                      uint8_t             *out);
size_t netlink__proto__notify_wzry_server_ip__pack_to_buffer
                     (const Netlink__Proto__NotifyWzryServerIp   *message,
                      ProtobufCBuffer     *buffer);
Netlink__Proto__NotifyWzryServerIp *
       netlink__proto__notify_wzry_server_ip__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   netlink__proto__notify_wzry_server_ip__free_unpacked
                     (Netlink__Proto__NotifyWzryServerIp *message,
                      ProtobufCAllocator *allocator);
/* Netlink__Proto__NotifyMessage methods */
void   netlink__proto__notify_message__init
                     (ProtobufCMessage         *message);
size_t netlink__proto__notify_message__get_packed_size
                     (const Netlink__Proto__NotifyMessage   *message);
size_t netlink__proto__notify_message__pack
                     (const Netlink__Proto__NotifyMessage   *message,
                      uint8_t             *out);
size_t netlink__proto__notify_message__pack_to_buffer
                     (const Netlink__Proto__NotifyMessage   *message,
                      ProtobufCBuffer     *buffer);
Netlink__Proto__NotifyMessage *
       netlink__proto__notify_message__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   netlink__proto__notify_message__free_unpacked
                     (Netlink__Proto__NotifyMessage *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Netlink__Proto__MessageHeader_Closure)
                 (const Netlink__Proto__MessageHeader *message,
                  void *closure_data);
typedef void (*Netlink__Proto__RequestSetDpiUid_Closure)
                 (const Netlink__Proto__RequestSetDpiUid *message,
                  void *closure_data);
typedef void (*Netlink__Proto__RequestGetDpiStreamSpeed_Closure)
                 (const Netlink__Proto__RequestGetDpiStreamSpeed *message,
                  void *closure_data);
typedef void (*Netlink__Proto__RequestSetLogSteamIp_Closure)
                 (const Netlink__Proto__RequestSetLogSteamIp *message,
                  void *closure_data);
typedef void (*Netlink__Proto__RequestGetAllUidSpeed_Closure)
                 (const Netlink__Proto__RequestGetAllUidSpeed *message,
                  void *closure_data);
typedef void (*Netlink__Proto__RequestSetDpiMatchAllUidEable_Closure)
                 (const Netlink__Proto__RequestSetDpiMatchAllUidEable *message,
                  void *closure_data);
typedef void (*Netlink__Proto__RequestMessage_Closure)
                 (const Netlink__Proto__RequestMessage *message,
                  void *closure_data);
typedef void (*Netlink__Proto__DpiSpeedItem_Closure)
                 (const Netlink__Proto__DpiSpeedItem *message,
                  void *closure_data);
typedef void (*Netlink__Proto__ResponseGetDpiStreamSpeed_Closure)
                 (const Netlink__Proto__ResponseGetDpiStreamSpeed *message,
                  void *closure_data);
typedef void (*Netlink__Proto__ResponseGetWzryServerIp_Closure)
                 (const Netlink__Proto__ResponseGetWzryServerIp *message,
                  void *closure_data);
typedef void (*Netlink__Proto__GameDelayStats_Closure)
                 (const Netlink__Proto__GameDelayStats *message,
                  void *closure_data);
typedef void (*Netlink__Proto__ResponseGetGameDelay_Closure)
                 (const Netlink__Proto__ResponseGetGameDelay *message,
                  void *closure_data);
typedef void (*Netlink__Proto__ResponseMessage_Closure)
                 (const Netlink__Proto__ResponseMessage *message,
                  void *closure_data);
typedef void (*Netlink__Proto__InformMessage_Closure)
                 (const Netlink__Proto__InformMessage *message,
                  void *closure_data);
typedef void (*Netlink__Proto__NotifyWzryServerIp_Closure)
                 (const Netlink__Proto__NotifyWzryServerIp *message,
                  void *closure_data);
typedef void (*Netlink__Proto__NotifyMessage_Closure)
                 (const Netlink__Proto__NotifyMessage *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    netlink__proto__netlink_msg_id__descriptor;
extern const ProtobufCEnumDescriptor    netlink__proto__dpi_level_type__descriptor;
extern const ProtobufCMessageDescriptor netlink__proto__message_header__descriptor;
extern const ProtobufCMessageDescriptor netlink__proto__request_set_dpi_uid__descriptor;
extern const ProtobufCMessageDescriptor netlink__proto__request_get_dpi_stream_speed__descriptor;
extern const ProtobufCMessageDescriptor netlink__proto__request_set_log_steam_ip__descriptor;
extern const ProtobufCMessageDescriptor netlink__proto__request_get_all_uid_speed__descriptor;
extern const ProtobufCMessageDescriptor netlink__proto__request_set_dpi_match_all_uid_eable__descriptor;
extern const ProtobufCMessageDescriptor netlink__proto__request_message__descriptor;
extern const ProtobufCMessageDescriptor netlink__proto__dpi_speed_item__descriptor;
extern const ProtobufCMessageDescriptor netlink__proto__response_get_dpi_stream_speed__descriptor;
extern const ProtobufCMessageDescriptor netlink__proto__response_get_wzry_server_ip__descriptor;
extern const ProtobufCMessageDescriptor netlink__proto__game_delay_stats__descriptor;
extern const ProtobufCMessageDescriptor netlink__proto__response_get_game_delay__descriptor;
extern const ProtobufCMessageDescriptor netlink__proto__response_message__descriptor;
extern const ProtobufCMessageDescriptor netlink__proto__inform_message__descriptor;
extern const ProtobufCMessageDescriptor netlink__proto__notify_wzry_server_ip__descriptor;
extern const ProtobufCMessageDescriptor netlink__proto__notify_message__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_netlink_5fmsg_2eproto__INCLUDED */
